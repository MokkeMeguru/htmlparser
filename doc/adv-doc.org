#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: HTMLのデータを更に解析する
#+date: <2019-08-22 木>
#+author: meguru
#+email: meguru.mokke@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 26.1 (Org mode 9.2.4)

* 適用した前処理一覧
** 適用可能性が非常に高い前処理
  - DONE spanタグの削除

    HTMLにおける span タグの意味より明らか。

  - DONE h2 タグによる内容の分離
    
    niconico 大百科のテンプレートとして、h2 タグが大まかな意味的区切りを司っていることが観察よりわかった。
  
** 適用可能性が高い前処理

  - DONE em / a / strong / sub / b / nobr / wbr / i タグの削除
    
  但し固有表現抽出のためには必要な可能性がある。
  
  - DONE br タグの削除
    
  但し読点を挿入しなければならない可能性がある。

** 適用可能性がやや高い前処理
- DONE ol/ul タグのリスト化
  
  おおよその場合でリストを表すためこれを直接リストの形式にしてしまうことが提案される。
  
  特殊なケースではこれに当てはまらない可能性がある点に注意が必要。
  

- DONE h3, h4, h5 タグによる内容の分離
  
  h2 タグのより詳細な場合に用いられることが多いようだ。


* 記事のヘッダーの一覧のためのデータベースの作り方

次のSQLファイル <yourpath>/nico-dict/zips/head/create-table.sql を作成してください。

#+BEGIN_SRC sqlite3
DROP TABLE IF EXISTS article_header;
CREATE TABLE article_header (
       article_id INTEGER PRIMARY KEY,
       article_title TEXT DEFAULT NULL,
       article_title_yomi TEXT DEFAULT NULL,
       article_category TEXT DEFAULT 'l',
       article_date TEXT DEFAULT '20000101000000'
)
#+END_SRC

次のコマンドでデータベースを掘ります。

#+BEGIN_SRC shell
sqlite3 ./headers.db < create-table.sql
#+END_SRC

次のファイルを作製してください。

#+BEGIN_SRC shell
#!/bin/sh
DB="$(pwd)/headers.db"
IMPORT_DIR="$(pwd)"

IMPORT_FILES="$(pwd)/*.csv"

for file_path in $IMPORT_FILES; do
    file_name=$(basename $file_path)
    table_name="article_header"
    sqlite3 -separator , $DB ".import ${file_path} ${table_name}"
done
#+END_SRC

これを /head/ 下で実行してください。

* Optional 研究用の json ファイルをサンプルする方法

  ~jqfiles.sh~ をjson ファイルのあるフォルダに配置して、これを実行 ~sh jsonfiles.sh~
  #+caption: jqfiles.json
  #+begin_src shell
  #!bin/bash
  for entry in $(pwd)/*.json
  do
    tmp_file=$(mktemp)
    jq . $entry > ${tmp_file} && mv ${tmp_file} $entry
  done
  #+end_src
